---
- name: Creating project folder
  file:
    path: '{{ repo_subfolder }}'
    state: directory

- name: Build project using composer template for Drupal projects
  shell: "composer create-project drupal-composer/drupal-project:8.x-dev {{ repo_subfolder }} --no-interaction --prefer-dist --no-progress --repository='{ \"type\":\"vcs\", \"url\":\"https://github.com/ey-/drupal-project\"}'"
  register: drupal_release

- name: Create folder for Drupal 8 configs
  file:
    recurse: yes
    path: '{{ repo_subfolder }}/config/staging'
    state: directory
  when: drupal_version == 8

- name: Add htaccess for Drupal 8 in configs
  file:
    path: '{{ repo_subfolder }}/config/staging/.htaccess'
    state: touch
  when: drupal_version == 8

- name: Inject pp profile into drupal
  file:
    path: '{{ repo_subfolder }}/{{ drupal_subfolder }}/profiles/{{ installation_profile_name }}'
    state: directory
  register: is_profile

- name: Copy local profile files to drupal directory
  synchronize:
    src: '{{ role_path }}/files/drupal{{ drupal_version }}/profiles/{{ installation_profile_name }}/'
    dest: '{{ repo_subfolder }}/{{ drupal_subfolder }}/profiles/{{ installation_profile_name }}/'
    recursive: yes
    archive: no
  register: profile_copy

- name: Create a folder placeholders for sniffers
  file:
    path: '{{ repo_subfolder }}/{{ drupal_subfolder }}/{{ item }}'
    state: directory
  ignore_errors: yes
  with_items: 'drupal_placeholders.drupal{{ drupal_version }}'

- name: Create empty readme files for placeholders
  file:
    path: '{{ repo_subfolder }}/{{ drupal_subfolder }}/{{ item }}/readme.txt'
    state: touch
    force: yes
  with_items: 'drupal_placeholders.drupal{{ drupal_version }}'

- name: Create Behat folder
  file:
    path: '{{ repo_subfolder }}/tests/behat'
    state: directory

- name: Injecting behat tests into repo
  synchronize:
    src: '{{ role_path }}/files/tests'
    dest: '{{ repo_subfolder }}/'
    recursive: yes
    archive: no
  when: with_vm == True
  register: vmbox

- name: Injecting vmbox into repo
  synchronize:
    src: '{{ role_path }}/files/vagrant/box/'
    dest: '{{ repo_subfolder }}/'
    recursive: yes
    archive: no
    rsync_opts:
      - "--exclude=.gitignore"
  when: with_tests == True
  register: tests

- name: Add CIBox core and contrib roles to vagrant box
  shell: cp -R ../core ../contrib {{ repo_subfolder }}/provisioning/ansible/
  when: with_vm == True

- name: Copying installation scripts - reinstall.sh and playbook reinstall.yml
  synchronize:
    src: '{{ role_path }}/files/drupal{{ drupal_version }}/scripts/'
    dest: '{{ repo_subfolder }}/cibox/'
    recursive: yes
    archive: no
  when: with_reinstall == True

- name: Override installation scripts - for composer workflow
  synchronize:
    src: '{{ role_path }}/files/composer_workflow/scripts/'
    dest: '{{ repo_subfolder }}/cibox/'
    recursive: yes
    archive: no
  when: with_reinstall == True
